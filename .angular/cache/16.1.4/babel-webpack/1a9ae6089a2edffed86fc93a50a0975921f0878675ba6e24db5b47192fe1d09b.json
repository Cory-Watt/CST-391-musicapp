{"ast":null,"code":"// Importing RouterModule and Routes to enable and configure routing respectively\nimport { RouterModule } from '@angular/router';\n// Importing components to which the application's paths will be mapped\nimport { CreateAlbumComponent } from './create-album/create-album.component';\nimport { DeleteAlbumComponent } from './delete-album/delete-album.component';\nimport { DisplayAlbumComponent } from './display-album/display-album.component';\nimport { EditAlbumComponent } from './edit-album/edit-album.component';\nimport { ListAlbumsComponent } from './list-albums/list-albums.component';\nimport { ListArtistsComponent } from './list-artists/list-artists.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// Defining routes: an array of objects that maps a specific path to a component\nconst routes = [\n// Path for creating an album. When '/create' is accessed, CreateAlbumComponent will be rendered\n{\n  path: 'create',\n  component: CreateAlbumComponent\n},\n// Path for listing artists. When '/list-artists' is accessed, ListArtistsComponent will be rendered\n{\n  path: 'list-artists',\n  component: ListArtistsComponent\n},\n// Path for listing albums. When '/list-albums' is accessed, ListAlbumsComponent will be rendered\n{\n  path: 'list-albums',\n  component: ListAlbumsComponent\n},\n// Path for displaying a specific album by its id. When '/display/:id' is accessed, DisplayAlbumComponent will be rendered\n{\n  path: 'display/:id',\n  component: DisplayAlbumComponent\n},\n// Path for editing a specific album by its artist name and id. When '/edit/:artist/:id' is accessed, EditAlbumComponent will be rendered\n{\n  path: 'edit/:artist/:id',\n  component: EditAlbumComponent\n},\n// Path for deleting a specific album by its artist name and id. When '/delete/:artist/:id' is accessed, DeleteAlbumComponent will be rendered\n{\n  path: 'delete/:artist/:id',\n  component: DeleteAlbumComponent\n}];\n// NgModule decorator where the module's metadata is defined\nexport class AppRoutingModule {} // Class definition for the module\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","CreateAlbumComponent","DeleteAlbumComponent","DisplayAlbumComponent","EditAlbumComponent","ListAlbumsComponent","ListArtistsComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\School\\CST-391 JavaScript Web Application Development\\Week 3\\musicapp\\src\\app\\app-routing.module.ts"],"sourcesContent":["// Importing necessary Angular core modules\nimport { NgModule } from '@angular/core';\n// Importing RouterModule and Routes to enable and configure routing respectively\nimport { RouterModule, Routes } from '@angular/router';\n\n// Importing components to which the application's paths will be mapped\nimport { CreateAlbumComponent } from './create-album/create-album.component';\nimport { DeleteAlbumComponent } from './delete-album/delete-album.component';\nimport { DisplayAlbumComponent } from './display-album/display-album.component';\nimport { EditAlbumComponent } from './edit-album/edit-album.component';\nimport { ListAlbumsComponent } from './list-albums/list-albums.component';\nimport { ListArtistsComponent } from './list-artists/list-artists.component';\n\n// Defining routes: an array of objects that maps a specific path to a component\nconst routes: Routes = [\n  // Path for creating an album. When '/create' is accessed, CreateAlbumComponent will be rendered\n  { path: 'create', component: CreateAlbumComponent },\n\n  // Path for listing artists. When '/list-artists' is accessed, ListArtistsComponent will be rendered\n  { path: 'list-artists', component: ListArtistsComponent },\n\n  // Path for listing albums. When '/list-albums' is accessed, ListAlbumsComponent will be rendered\n  { path: 'list-albums', component: ListAlbumsComponent },\n\n  // Path for displaying a specific album by its id. When '/display/:id' is accessed, DisplayAlbumComponent will be rendered\n  { path: 'display/:id', component: DisplayAlbumComponent },\n\n  // Path for editing a specific album by its artist name and id. When '/edit/:artist/:id' is accessed, EditAlbumComponent will be rendered\n  { path: 'edit/:artist/:id', component: EditAlbumComponent },\n\n  // Path for deleting a specific album by its artist name and id. When '/delete/:artist/:id' is accessed, DeleteAlbumComponent will be rendered\n  { path: 'delete/:artist/:id', component: DeleteAlbumComponent }\n];\n\n// NgModule decorator where the module's metadata is defined\n@NgModule({\n  imports: [RouterModule.forRoot(routes)], // Configures the router at the application's root level with the given routes\n  exports: [RouterModule] // Exporting RouterModule makes router directives available for use in the AppModule components\n})\nexport class AppRoutingModule { } // Class definition for the module"],"mappings":"AAEA;AACA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD;AACA,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,oBAAoB,QAAQ,uCAAuC;;;AAE5E;AACA,MAAMC,MAAM,GAAW;AACrB;AACA;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAER;AAAoB,CAAE;AAEnD;AACA;EAAEO,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEH;AAAoB,CAAE;AAEzD;AACA;EAAEE,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEJ;AAAmB,CAAE;AAEvD;AACA;EAAEG,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEN;AAAqB,CAAE;AAEzD;AACA;EAAEK,IAAI,EAAE,kBAAkB;EAAEC,SAAS,EAAEL;AAAkB,CAAE;AAE3D;AACA;EAAEI,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEP;AAAoB,CAAE,CAChE;AAED;AAKA,OAAM,MAAOQ,gBAAgB,G,CAAK;AAArBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YAHjBV,YAAY,CAACW,OAAO,CAACJ,MAAM,CAAC,EAC5BP,YAAY;AAAA;;2EAEXU,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAb,YAAA;IAAAc,OAAA,GAFjBd,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}